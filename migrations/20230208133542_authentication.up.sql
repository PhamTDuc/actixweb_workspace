CREATE SCHEMA "authentication";

CREATE SCHEMA "game_admin";

CREATE TYPE "authentication"."status" AS ENUM (
  'active',
  'deactivate',
  'blocked'
);

CREATE TYPE "authentication"."permission" AS ENUM (
  'grant_permission',
  'can_view',
  'add_game',
  'add_platform',
  'add_game_version',
  'add_dlc'
);

CREATE TABLE "authentication"."user_info" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_name" varchar(128) UNIQUE NOT NULL,
  "email" varchar(128) NOT NULL,
  "password" varchar(128) NOT NULL,
  "role" int NOT NULL,
  "status" authentication.status NOT NULL
);

CREATE TABLE "authentication"."permission_role" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(128) UNIQUE NOT NULL,
  "permission" authentication.permission[] NOT NULL
);

CREATE TABLE "game_admin"."game" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(128) NOT NULL,
  "owner" bigint,
  "created_date" timestamp
);

CREATE TABLE "game_admin"."platform" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "platform" varchar(128) UNIQUE NOT NULL
);

CREATE TABLE "game_admin"."game_version" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "game_id" bigint,
  "platform_id" int,
  "client_id" varchar(128) UNIQUE NOT NULL
);

ALTER TABLE "authentication"."user_info" ADD FOREIGN KEY ("role") REFERENCES "authentication"."permission_role" ("id");

ALTER TABLE "game_admin"."game" ADD FOREIGN KEY ("owner") REFERENCES "authentication"."user_info" ("id");

ALTER TABLE "game_admin"."game_version" ADD FOREIGN KEY ("game_id") REFERENCES "game_admin"."game" ("id");

ALTER TABLE "game_admin"."game_version" ADD FOREIGN KEY ("platform_id") REFERENCES "game_admin"."platform" ("id");
