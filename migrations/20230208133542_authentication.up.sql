CREATE SCHEMA "authentication";

CREATE TYPE "authentication"."role" AS ENUM (
  'admin',
  'user'
);

CREATE TYPE "authentication"."status" AS ENUM (
  'active',
  'deactivate',
  'blocked'
);

CREATE TYPE "authentication"."permission" AS ENUM (
  'grant_permission',
  'can_view'
);

CREATE TABLE "authentication"."user_info" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_name" varchar(128) UNIQUE NOT NULL,
  "email" varchar(128),
  "password" varchar(128) NOT NULL,
  "role" authentication.role NOT NULL,
  "status" authentication.status NOT NULL
);

CREATE TABLE "authentication"."permission_role" (
  "role" authentication.role PRIMARY KEY,
  "permission" authentication.permission[] NOT NULL
);

ALTER TABLE "authentication"."user_info" ADD FOREIGN KEY ("role") REFERENCES "authentication"."permission_role" ("role");

INSERT INTO "authentication"."permission_role"("role", "permission") VALUES ('admin', '{"grant_permission","can_view"}');
INSERT INTO "authentication"."permission_role"("role", "permission") VALUES ('user', '{"can_view"}');